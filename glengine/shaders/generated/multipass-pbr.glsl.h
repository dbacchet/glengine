#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Overview:

        Shader program 'offscreen_pbr':
            Get shader desc: offscreen_pbr_shader_desc()
            Vertex shader: vs_pbr
                Attribute slots:
                    ATTR_vs_pbr_vertex_pos = 0
                    ATTR_vs_pbr_vertex_color = 1
                    ATTR_vs_pbr_vertex_normal = 2
                    ATTR_vs_pbr_vertex_texcoord = 3
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
            Fragment shader: metallic_fs
                Uniform block 'light_params':
                    C struct: light_params_t
                    Bind slot: SLOT_light_params = 0
                Uniform block 'metallic_params':
                    C struct: metallic_params_t
                    Bind slot: SLOT_metallic_params = 1
                Image 'normal_texture':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_normal_texture = 0
                Image 'metallic_roughness_texture':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_metallic_roughness_texture = 1
                Image 'base_color_texture':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_base_color_texture = 2
                Image 'occlusion_texture':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_occlusion_texture = 3
                Image 'emissive_texture':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_emissive_texture = 4


    Shader descriptor structs:

        sg_shader offscreen_pbr = sg_make_shader(offscreen_pbr_shader_desc());

    Vertex attribute locations for vertex shader 'vs_pbr':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_pbr_vertex_pos] = { ... },
                    [ATTR_vs_pbr_vertex_color] = { ... },
                    [ATTR_vs_pbr_vertex_normal] = { ... },
                    [ATTR_vs_pbr_vertex_texcoord] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_normal_texture = 0;
        SLOT_metallic_roughness_texture = 1;
        SLOT_base_color_texture = 2;
        SLOT_occlusion_texture = 3;
        SLOT_emissive_texture = 4;

    Bind slot and C-struct for uniform block 'vs_params':

        vs_params_t vs_params = {
            .model = ...;
            .view = ...;
            .projection = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_params, &vs_params, sizeof(vs_params));

    Bind slot and C-struct for uniform block 'light_params':

        light_params_t light_params = {
            .light_pos = ...;
            .light_range = ...;
            .light_color = ...;
            .light_intensity = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_light_params, &light_params, sizeof(light_params));

    Bind slot and C-struct for uniform block 'metallic_params':

        metallic_params_t metallic_params = {
            .base_color_factor = ...;
            .emissive_factor = ...;
            .metallic_factor = ...;
            .roughness_factor = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_metallic_params, &metallic_params, sizeof(metallic_params));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_vs_pbr_vertex_pos (0)
#define ATTR_vs_pbr_vertex_color (1)
#define ATTR_vs_pbr_vertex_normal (2)
#define ATTR_vs_pbr_vertex_texcoord (3)
#define SLOT_normal_texture (0)
#define SLOT_metallic_roughness_texture (1)
#define SLOT_base_color_texture (2)
#define SLOT_occlusion_texture (3)
#define SLOT_emissive_texture (4)
#define SLOT_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    math::Matrix4f model;
    math::Matrix4f view;
    math::Matrix4f projection;
} vs_params_t;
#pragma pack(pop)
#define SLOT_light_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct light_params_t {
    math::Vector3f light_pos;
    float light_range;
    math::Vector3f light_color;
    float light_intensity;
} light_params_t;
#pragma pack(pop)
#define SLOT_metallic_params (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct metallic_params_t {
    math::Vector4f base_color_factor;
    math::Vector3f emissive_factor;
    float metallic_factor;
    float roughness_factor;
    uint8_t _pad_36[12];
} metallic_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 vs_params[12];
    layout(location = 0) in vec4 vertex_pos;
    out vec3 v_pos;
    out vec3 v_nrm;
    layout(location = 2) in vec3 vertex_normal;
    out vec2 v_uv;
    layout(location = 3) in vec2 vertex_texcoord;
    out vec3 v_eye_pos;
    layout(location = 1) in vec4 vertex_color;
    
    void main()
    {
        mat4 _19 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]);
        vec4 _23 = _19 * vertex_pos;
        v_pos = _23.xyz / vec3(_23.w);
        v_nrm = (_19 * vec4(vertex_normal, 0.0)).xyz;
        v_uv = vertex_texcoord;
        mat4 _58 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        v_eye_pos = inverse(_58)[3].xyz;
        gl_Position = (mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _58) * _23;
    }
    
*/
static const char vs_pbr_source_glsl330[735] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x70,0x6f,
    0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,
    0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x72,
    0x6d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,
    0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,
    0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,
    0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x65,0x72,0x74,0x65,
    0x78,0x5f,0x74,0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6f,0x75,0x74,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x65,0x72,
    0x74,0x65,0x78,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,
    0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,
    0x74,0x34,0x20,0x5f,0x31,0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x33,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x5f,0x32,0x33,0x20,0x3d,0x20,0x5f,0x31,0x39,0x20,0x2a,0x20,0x76,0x65,0x72,0x74,
    0x65,0x78,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x70,0x6f,
    0x73,0x20,0x3d,0x20,0x5f,0x32,0x33,0x2e,0x78,0x79,0x7a,0x20,0x2f,0x20,0x76,0x65,
    0x63,0x33,0x28,0x5f,0x32,0x33,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x5f,0x6e,0x72,0x6d,0x20,0x3d,0x20,0x28,0x5f,0x31,0x39,0x20,0x2a,0x20,0x76,0x65,
    0x63,0x34,0x28,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x5f,0x75,0x76,0x20,0x3d,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x5f,0x74,
    0x65,0x78,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,
    0x34,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x36,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x37,0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x65,0x79,0x65,0x5f,
    0x70,0x6f,0x73,0x20,0x3d,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x35,
    0x38,0x29,0x5b,0x33,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,
    0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,
    0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x76,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x5f,
    0x35,0x38,0x29,0x20,0x2a,0x20,0x5f,0x32,0x33,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    struct angular_info_t
    {
        float n_dot_l;
        float n_dot_v;
        float n_dot_h;
        float l_dot_h;
        float v_dot_h;
        vec3 padding;
    };
    
    struct material_info_t
    {
        float perceptual_roughness;
        vec3 reflectance0;
        float alpha_roughness;
        vec3 diffuse_color;
        vec3 reflectance90;
        vec3 specular_color;
    };
    
    uniform vec4 light_params[2];
    uniform vec4 metallic_params[3];
    uniform sampler2D normal_texture;
    uniform sampler2D metallic_roughness_texture;
    uniform sampler2D base_color_texture;
    uniform sampler2D occlusion_texture;
    uniform sampler2D emissive_texture;
    
    in vec3 v_pos;
    in vec2 v_uv;
    in vec3 v_nrm;
    in vec3 v_eye_pos;
    layout(location = 0) out vec4 frag_color;
    
    vec4 srgb_to_linear(vec4 srgb)
    {
        return vec4(pow(srgb.xyz, vec3(2.2000000476837158203125)), srgb.w);
    }
    
    vec3 get_normal()
    {
        vec3 _97 = vec3(v_uv, 0.0);
        vec3 _98 = dFdx(_97);
        vec3 _104 = dFdy(_97);
        float _108 = _104.y;
        float _112 = _98.y;
        vec3 _129 = ((dFdx(v_pos) * _108) - (dFdy(v_pos) * _112)) / vec3((_98.x * _108) - (_104.x * _112));
        vec3 _133 = normalize(v_nrm);
        vec3 _141 = normalize(_129 - (_133 * dot(_133, _129)));
        vec2 _180 = (texture(normal_texture, v_uv).xw * 2.0) - vec2(1.0);
        float _183 = _180.x;
        float _185 = _180.y;
        return normalize(mat3(_141, normalize(cross(_133, _141)), _133) * vec3(_183, _185, sqrt((1.0 - (_183 * _183)) - (_185 * _185))));
    }
    
    float get_range_attenuation(float range, float _distance)
    {
        if (range < 0.0)
        {
            return 1.0;
        }
        return max(min(1.0 - pow(_distance / range, 4.0), 1.0), 0.0) / pow(_distance, 2.0);
    }
    
    angular_info_t get_angular_info(vec3 point_to_light, vec3 normal, vec3 view)
    {
        vec3 _209 = normalize(normal);
        vec3 _212 = normalize(view);
        vec3 _215 = normalize(point_to_light);
        vec3 _220 = normalize(_215 + _212);
        return angular_info_t(clamp(dot(_209, _215), 0.0, 1.0), clamp(dot(_209, _212), 0.0, 1.0), clamp(dot(_209, _220), 0.0, 1.0), clamp(dot(_215, _220), 0.0, 1.0), clamp(dot(_212, _220), 0.0, 1.0), vec3(0.0));
    }
    
    vec3 specular_reflection(material_info_t material_info, angular_info_t angular_info)
    {
        return material_info.reflectance0 + ((material_info.reflectance90 - material_info.reflectance0) * pow(clamp(1.0 - angular_info.v_dot_h, 0.0, 1.0), 5.0));
    }
    
    float visibility_occlusion(material_info_t material_info, angular_info_t angular_info)
    {
        float _288 = material_info.alpha_roughness * material_info.alpha_roughness;
        float _295 = 1.0 - _288;
        float _316 = (angular_info.n_dot_l * sqrt(((angular_info.n_dot_v * angular_info.n_dot_v) * _295) + _288)) + (angular_info.n_dot_v * sqrt(((angular_info.n_dot_l * angular_info.n_dot_v) * _295) + _288));
        if (_316 > 0.0)
        {
            return 0.5 / _316;
        }
        return 0.0;
    }
    
    float microfacet_distribution(material_info_t material_info, angular_info_t angular_info)
    {
        float _333 = material_info.alpha_roughness * material_info.alpha_roughness;
        float _345 = (((angular_info.n_dot_h * _333) - angular_info.n_dot_h) * angular_info.n_dot_h) + 1.0;
        return _333 / ((3.1415927410125732421875 * _345) * _345);
    }
    
    vec3 diffuse(material_info_t material_info)
    {
        return material_info.diffuse_color * vec3(0.3183098733425140380859375);
    }
    
    vec3 get_point_shade(vec3 point_to_light, material_info_t material_info, vec3 normal, vec3 view)
    {
        vec3 param = point_to_light;
        vec3 param_1 = normal;
        vec3 param_2 = view;
        angular_info_t _369 = get_angular_info(param, param_1, param_2);
        bool _372 = _369.n_dot_l > 0.0;
        bool _379;
        if (!_372)
        {
            _379 = _369.n_dot_v > 0.0;
        }
        else
        {
            _379 = _372;
        }
        if (_379)
        {
            material_info_t param_3 = material_info;
            angular_info_t param_4 = _369;
            vec3 _387 = specular_reflection(param_3, param_4);
            material_info_t param_5 = material_info;
            angular_info_t param_6 = _369;
            material_info_t param_7 = material_info;
            angular_info_t param_8 = _369;
            material_info_t param_9 = material_info;
            return ((vec3(1.0) - _387) * diffuse(param_9)) + ((_387 * visibility_occlusion(param_5, param_6)) * microfacet_distribution(param_7, param_8));
        }
        return vec3(0.0, 0.0, 1.0);
    }
    
    vec3 apply_point_light(material_info_t material_info, vec3 normal, vec3 view)
    {
        vec3 _454 = light_params[0].xyz - v_pos;
        float param = light_params[0].w;
        float param_1 = length(_454);
        vec3 param_2 = _454;
        material_info_t param_3 = material_info;
        vec3 param_4 = normal;
        vec3 param_5 = view;
        return (light_params[1].xyz * (get_range_attenuation(param, param_1) * light_params[1].w)) * get_point_shade(param_2, param_3, param_4, param_5);
    }
    
    void main()
    {
        vec4 _491 = texture(metallic_roughness_texture, v_uv);
        float _501 = clamp(_491.w * metallic_params[2].x, 0.0, 1.0);
        float _508 = clamp(_491.x * metallic_params[1].w, 0.0, 1.0);
        vec4 param = texture(base_color_texture, v_uv);
        vec3 _522 = (srgb_to_linear(param) * metallic_params[0]).xyz;
        vec3 _536 = mix(vec3(0.039999999105930328369140625), _522, vec3(_508));
        vec3 normal = get_normal();
        if (v_pos.x < 0.0)
        {
            normal = v_nrm;
        }
        material_info_t param_1 = material_info_t(_501, _536, _501 * _501, (_522 * vec3(0.959999978542327880859375)) * (1.0 - _508), vec3(clamp(max(max(_536.x, _536.y), _536.z) * 50.0, 0.0, 1.0)), _536);
        vec3 param_2 = normal;
        vec3 param_3 = normalize(v_eye_pos - v_pos);
        vec3 color = apply_point_light(param_1, param_2, param_3) * texture(occlusion_texture, v_uv).x;
        vec4 param_4 = texture(emissive_texture, v_uv);
        vec3 _607 = color;
        vec3 _608 = _607 + (srgb_to_linear(param_4).xyz * metallic_params[1].xyz);
        color = _608;
        frag_color = vec4(_608, 1.0);
    }
    
*/
static const char metallic_fs_source_glsl330[5796] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,
    0x6f,0x5f,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x68,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6c,0x5f,0x64,0x6f,0x74,0x5f,0x68,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,0x5f,0x64,0x6f,
    0x74,0x5f,0x68,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x64,0x64,0x69,0x6e,0x67,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,
    0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,
    0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x65,
    0x72,0x63,0x65,0x70,0x74,0x75,0x61,0x6c,0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,
    0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x65,0x66,
    0x6c,0x65,0x63,0x74,0x61,0x6e,0x63,0x65,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,0x68,0x61,0x5f,0x72,0x6f,0x75,0x67,0x68,
    0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x61,0x6e,
    0x63,0x65,0x39,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,
    0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x3b,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x6d,0x65,
    0x74,0x61,0x6c,0x6c,0x69,0x63,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x32,0x44,0x20,0x6d,0x65,0x74,0x61,0x6c,0x6c,0x69,0x63,0x5f,0x72,
    0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x62,0x61,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,
    0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x6f,0x63,0x63,0x6c,0x75,0x73,
    0x69,0x6f,0x6e,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x3b,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x65,
    0x6d,0x69,0x73,0x73,0x69,0x76,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x3b,
    0x0a,0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x70,0x6f,0x73,0x3b,
    0x0a,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x5f,0x75,0x76,0x3b,0x0a,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x6e,0x72,0x6d,0x3b,0x0a,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x65,0x63,0x34,
    0x20,0x73,0x72,0x67,0x62,0x5f,0x74,0x6f,0x5f,0x6c,0x69,0x6e,0x65,0x61,0x72,0x28,
    0x76,0x65,0x63,0x34,0x20,0x73,0x72,0x67,0x62,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x77,
    0x28,0x73,0x72,0x67,0x62,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x32,0x2e,0x32,0x30,0x30,0x30,0x30,0x30,0x30,0x34,0x37,0x36,0x38,0x33,0x37,0x31,
    0x35,0x38,0x32,0x30,0x33,0x31,0x32,0x35,0x29,0x29,0x2c,0x20,0x73,0x72,0x67,0x62,
    0x2e,0x77,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x67,0x65,0x74,
    0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x39,0x37,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,
    0x76,0x5f,0x75,0x76,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x39,0x38,0x20,0x3d,0x20,0x64,0x46,0x64,0x78,0x28,
    0x5f,0x39,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x31,0x30,0x34,0x20,0x3d,0x20,0x64,0x46,0x64,0x79,0x28,0x5f,0x39,0x37,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x30,0x38,0x20,
    0x3d,0x20,0x5f,0x31,0x30,0x34,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x31,0x32,0x20,0x3d,0x20,0x5f,0x39,0x38,0x2e,0x79,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x32,0x39,0x20,
    0x3d,0x20,0x28,0x28,0x64,0x46,0x64,0x78,0x28,0x76,0x5f,0x70,0x6f,0x73,0x29,0x20,
    0x2a,0x20,0x5f,0x31,0x30,0x38,0x29,0x20,0x2d,0x20,0x28,0x64,0x46,0x64,0x79,0x28,
    0x76,0x5f,0x70,0x6f,0x73,0x29,0x20,0x2a,0x20,0x5f,0x31,0x31,0x32,0x29,0x29,0x20,
    0x2f,0x20,0x76,0x65,0x63,0x33,0x28,0x28,0x5f,0x39,0x38,0x2e,0x78,0x20,0x2a,0x20,
    0x5f,0x31,0x30,0x38,0x29,0x20,0x2d,0x20,0x28,0x5f,0x31,0x30,0x34,0x2e,0x78,0x20,
    0x2a,0x20,0x5f,0x31,0x31,0x32,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x31,0x33,0x33,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x76,0x5f,0x6e,0x72,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x34,0x31,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x31,0x32,0x39,0x20,0x2d,0x20,0x28,0x5f,0x31,
    0x33,0x33,0x20,0x2a,0x20,0x64,0x6f,0x74,0x28,0x5f,0x31,0x33,0x33,0x2c,0x20,0x5f,
    0x31,0x32,0x39,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,
    0x20,0x5f,0x31,0x38,0x30,0x20,0x3d,0x20,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,
    0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2c,
    0x20,0x76,0x5f,0x75,0x76,0x29,0x2e,0x78,0x77,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,
    0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x33,0x20,0x3d,0x20,0x5f,
    0x31,0x38,0x30,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x38,0x35,0x20,0x3d,0x20,0x5f,0x31,0x38,0x30,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x6d,0x61,0x74,0x33,0x28,0x5f,0x31,0x34,0x31,0x2c,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x63,0x72,0x6f,0x73,0x73,0x28,
    0x5f,0x31,0x33,0x33,0x2c,0x20,0x5f,0x31,0x34,0x31,0x29,0x29,0x2c,0x20,0x5f,0x31,
    0x33,0x33,0x29,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x31,0x38,0x33,0x2c,
    0x20,0x5f,0x31,0x38,0x35,0x2c,0x20,0x73,0x71,0x72,0x74,0x28,0x28,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x28,0x5f,0x31,0x38,0x33,0x20,0x2a,0x20,0x5f,0x31,0x38,0x33,0x29,
    0x29,0x20,0x2d,0x20,0x28,0x5f,0x31,0x38,0x35,0x20,0x2a,0x20,0x5f,0x31,0x38,0x35,
    0x29,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,
    0x65,0x74,0x5f,0x72,0x61,0x6e,0x67,0x65,0x5f,0x61,0x74,0x74,0x65,0x6e,0x75,0x61,
    0x74,0x69,0x6f,0x6e,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x6e,0x67,0x65,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,
    0x65,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x72,0x61,0x6e,
    0x67,0x65,0x20,0x3c,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x31,
    0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x78,0x28,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,
    0x20,0x2d,0x20,0x70,0x6f,0x77,0x28,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,
    0x20,0x2f,0x20,0x72,0x61,0x6e,0x67,0x65,0x2c,0x20,0x34,0x2e,0x30,0x29,0x2c,0x20,
    0x31,0x2e,0x30,0x29,0x2c,0x20,0x30,0x2e,0x30,0x29,0x20,0x2f,0x20,0x70,0x6f,0x77,
    0x28,0x5f,0x64,0x69,0x73,0x74,0x61,0x6e,0x63,0x65,0x2c,0x20,0x32,0x2e,0x30,0x29,
    0x3b,0x0a,0x7d,0x0a,0x0a,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,
    0x6f,0x5f,0x74,0x20,0x67,0x65,0x74,0x5f,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,
    0x69,0x6e,0x66,0x6f,0x28,0x76,0x65,0x63,0x33,0x20,0x70,0x6f,0x69,0x6e,0x74,0x5f,
    0x74,0x6f,0x5f,0x6c,0x69,0x67,0x68,0x74,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,
    0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x30,
    0x39,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x6e,0x6f,
    0x72,0x6d,0x61,0x6c,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x32,0x31,0x32,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x76,0x69,0x65,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x32,0x31,0x35,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x74,0x6f,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,0x32,0x30,
    0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x5f,0x32,0x31,
    0x35,0x20,0x2b,0x20,0x5f,0x32,0x31,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,
    0x66,0x6f,0x5f,0x74,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x5f,
    0x32,0x30,0x39,0x2c,0x20,0x5f,0x32,0x31,0x35,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x6f,0x74,
    0x28,0x5f,0x32,0x30,0x39,0x2c,0x20,0x5f,0x32,0x31,0x32,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,
    0x6f,0x74,0x28,0x5f,0x32,0x30,0x39,0x2c,0x20,0x5f,0x32,0x32,0x30,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x64,0x6f,0x74,0x28,0x5f,0x32,0x31,0x35,0x2c,0x20,0x5f,0x32,0x32,0x30,0x29,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x5f,0x32,0x31,0x32,0x2c,0x20,0x5f,0x32,0x32,
    0x30,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,
    0x63,0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x72,0x65,0x66,0x6c,
    0x65,0x63,0x74,0x69,0x6f,0x6e,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,
    0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,
    0x69,0x6e,0x66,0x6f,0x2c,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,
    0x66,0x6f,0x5f,0x74,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,
    0x6f,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x72,0x65,
    0x66,0x6c,0x65,0x63,0x74,0x61,0x6e,0x63,0x65,0x30,0x20,0x2b,0x20,0x28,0x28,0x6d,
    0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x72,0x65,0x66,
    0x6c,0x65,0x63,0x74,0x61,0x6e,0x63,0x65,0x39,0x30,0x20,0x2d,0x20,0x6d,0x61,0x74,
    0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x72,0x65,0x66,0x6c,0x65,
    0x63,0x74,0x61,0x6e,0x63,0x65,0x30,0x29,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x63,
    0x6c,0x61,0x6d,0x70,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x61,0x6e,0x67,0x75,0x6c,
    0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x76,0x5f,0x64,0x6f,0x74,0x5f,0x68,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x35,0x2e,0x30,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x76,0x69,0x73,0x69,
    0x62,0x69,0x6c,0x69,0x74,0x79,0x5f,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,
    0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,
    0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x2c,0x20,
    0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x61,
    0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x38,0x38,0x20,0x3d,0x20,
    0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x61,0x6c,
    0x70,0x68,0x61,0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x20,0x2a,0x20,
    0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x61,0x6c,
    0x70,0x68,0x61,0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x39,0x35,0x20,0x3d,0x20,
    0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x32,0x38,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x31,0x36,0x20,0x3d,0x20,0x28,0x61,0x6e,
    0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x6e,0x5f,0x64,0x6f,0x74,
    0x5f,0x6c,0x20,0x2a,0x20,0x73,0x71,0x72,0x74,0x28,0x28,0x28,0x61,0x6e,0x67,0x75,
    0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x76,
    0x20,0x2a,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,
    0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x76,0x29,0x20,0x2a,0x20,0x5f,0x32,0x39,0x35,0x29,
    0x20,0x2b,0x20,0x5f,0x32,0x38,0x38,0x29,0x29,0x20,0x2b,0x20,0x28,0x61,0x6e,0x67,
    0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x6e,0x5f,0x64,0x6f,0x74,0x5f,
    0x76,0x20,0x2a,0x20,0x73,0x71,0x72,0x74,0x28,0x28,0x28,0x61,0x6e,0x67,0x75,0x6c,
    0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x6c,0x20,
    0x2a,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x6e,
    0x5f,0x64,0x6f,0x74,0x5f,0x76,0x29,0x20,0x2a,0x20,0x5f,0x32,0x39,0x35,0x29,0x20,
    0x2b,0x20,0x5f,0x32,0x38,0x38,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x5f,0x33,0x31,0x36,0x20,0x3e,0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x30,0x2e,0x35,0x20,0x2f,0x20,0x5f,0x33,0x31,0x36,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x30,0x2e,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6d,0x69,
    0x63,0x72,0x6f,0x66,0x61,0x63,0x65,0x74,0x5f,0x64,0x69,0x73,0x74,0x72,0x69,0x62,
    0x75,0x74,0x69,0x6f,0x6e,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,
    0x6e,0x66,0x6f,0x5f,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,
    0x6e,0x66,0x6f,0x2c,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,
    0x6f,0x5f,0x74,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,
    0x33,0x33,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,
    0x66,0x6f,0x2e,0x61,0x6c,0x70,0x68,0x61,0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,
    0x73,0x73,0x20,0x2a,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,
    0x66,0x6f,0x2e,0x61,0x6c,0x70,0x68,0x61,0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,
    0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,
    0x34,0x35,0x20,0x3d,0x20,0x28,0x28,0x28,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,
    0x69,0x6e,0x66,0x6f,0x2e,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x68,0x20,0x2a,0x20,0x5f,
    0x33,0x33,0x33,0x29,0x20,0x2d,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,
    0x6e,0x66,0x6f,0x2e,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x68,0x29,0x20,0x2a,0x20,0x61,
    0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x2e,0x6e,0x5f,0x64,0x6f,
    0x74,0x5f,0x68,0x29,0x20,0x2b,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x33,0x33,0x33,0x20,0x2f,0x20,0x28,0x28,
    0x33,0x2e,0x31,0x34,0x31,0x35,0x39,0x32,0x37,0x34,0x31,0x30,0x31,0x32,0x35,0x37,
    0x33,0x32,0x34,0x32,0x31,0x38,0x37,0x35,0x20,0x2a,0x20,0x5f,0x33,0x34,0x35,0x29,
    0x20,0x2a,0x20,0x5f,0x33,0x34,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,
    0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,
    0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,
    0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,
    0x6e,0x66,0x6f,0x2e,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,
    0x72,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x31,0x38,0x33,0x30,
    0x39,0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,0x30,0x33,0x38,0x30,0x38,0x35,
    0x39,0x33,0x37,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x67,
    0x65,0x74,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x73,0x68,0x61,0x64,0x65,0x28,0x76,
    0x65,0x63,0x33,0x20,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x74,0x6f,0x5f,0x6c,0x69,0x67,
    0x68,0x74,0x2c,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,
    0x6f,0x5f,0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,
    0x6f,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,
    0x76,0x65,0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x70,0x6f,
    0x69,0x6e,0x74,0x5f,0x74,0x6f,0x5f,0x6c,0x69,0x67,0x68,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,0x69,0x65,0x77,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,
    0x66,0x6f,0x5f,0x74,0x20,0x5f,0x33,0x36,0x39,0x20,0x3d,0x20,0x67,0x65,0x74,0x5f,
    0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x28,0x70,0x61,0x72,
    0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,0x6f,0x6f,0x6c,0x20,
    0x5f,0x33,0x37,0x32,0x20,0x3d,0x20,0x5f,0x33,0x36,0x39,0x2e,0x6e,0x5f,0x64,0x6f,
    0x74,0x5f,0x6c,0x20,0x3e,0x20,0x30,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x62,
    0x6f,0x6f,0x6c,0x20,0x5f,0x33,0x37,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,
    0x20,0x28,0x21,0x5f,0x33,0x37,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,0x33,0x37,0x39,0x20,0x3d,0x20,0x5f,0x33,
    0x36,0x39,0x2e,0x6e,0x5f,0x64,0x6f,0x74,0x5f,0x76,0x20,0x3e,0x20,0x30,0x2e,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5f,
    0x33,0x37,0x39,0x20,0x3d,0x20,0x5f,0x33,0x37,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x33,0x37,0x39,0x29,0x0a,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6d,0x61,
    0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5f,0x69,0x6e,0x66,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,
    0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,0x33,0x36,0x39,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x33,0x38,0x37,0x20,
    0x3d,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x5f,0x72,0x65,0x66,0x6c,0x65,
    0x63,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,0x72,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x20,0x3d,0x20,0x5f,0x33,0x36,0x39,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,
    0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,
    0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x61,0x6e,0x67,0x75,0x6c,0x61,
    0x72,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,
    0x20,0x3d,0x20,0x5f,0x33,0x36,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,
    0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x76,0x65,0x63,0x33,0x28,
    0x31,0x2e,0x30,0x29,0x20,0x2d,0x20,0x5f,0x33,0x38,0x37,0x29,0x20,0x2a,0x20,0x64,
    0x69,0x66,0x66,0x75,0x73,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x39,0x29,0x29,
    0x20,0x2b,0x20,0x28,0x28,0x5f,0x33,0x38,0x37,0x20,0x2a,0x20,0x76,0x69,0x73,0x69,
    0x62,0x69,0x6c,0x69,0x74,0x79,0x5f,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x36,0x29,0x29,0x20,0x2a,0x20,0x6d,0x69,0x63,0x72,0x6f,0x66,0x61,0x63,0x65,0x74,
    0x5f,0x64,0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,
    0x61,0x70,0x70,0x6c,0x79,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,
    0x74,0x28,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,
    0x74,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x69,0x65,0x77,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x5f,0x34,0x35,0x34,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2d,
    0x20,0x76,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,
    0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x5f,0x34,0x35,0x34,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,
    0x3d,0x20,0x5f,0x34,0x35,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x65,
    0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,
    0x6e,0x66,0x6f,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,
    0x20,0x3d,0x20,0x76,0x69,0x65,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x28,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x67,0x65,0x74,0x5f,
    0x72,0x61,0x6e,0x67,0x65,0x5f,0x61,0x74,0x74,0x65,0x6e,0x75,0x61,0x74,0x69,0x6f,
    0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x29,0x20,0x2a,0x20,0x6c,0x69,0x67,0x68,0x74,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x31,0x5d,0x2e,0x77,0x29,0x29,0x20,0x2a,0x20,0x67,0x65,0x74,0x5f,0x70,0x6f,
    0x69,0x6e,0x74,0x5f,0x73,0x68,0x61,0x64,0x65,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x34,0x39,0x31,0x20,0x3d,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x6d,0x65,0x74,0x61,0x6c,0x6c,0x69,0x63,
    0x5f,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x5f,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x2c,0x20,0x76,0x5f,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x30,0x31,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,
    0x70,0x28,0x5f,0x34,0x39,0x31,0x2e,0x77,0x20,0x2a,0x20,0x6d,0x65,0x74,0x61,0x6c,
    0x6c,0x69,0x63,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x32,0x5d,0x2e,0x78,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x30,0x38,0x20,0x3d,0x20,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x5f,0x34,0x39,0x31,0x2e,0x78,0x20,0x2a,0x20,0x6d,0x65,0x74,0x61,
    0x6c,0x6c,0x69,0x63,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x77,
    0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x62,0x61,0x73,0x65,0x5f,0x63,0x6f,0x6c,0x6f,0x72,
    0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2c,0x20,0x76,0x5f,0x75,0x76,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x32,0x32,0x20,0x3d,
    0x20,0x28,0x73,0x72,0x67,0x62,0x5f,0x74,0x6f,0x5f,0x6c,0x69,0x6e,0x65,0x61,0x72,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x20,0x2a,0x20,0x6d,0x65,0x74,0x61,0x6c,0x6c,
    0x69,0x63,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x29,0x2e,0x78,0x79,
    0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x33,0x36,
    0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x33,
    0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x31,0x30,0x35,0x39,0x33,0x30,0x33,0x32,0x38,
    0x33,0x36,0x39,0x31,0x34,0x30,0x36,0x32,0x35,0x29,0x2c,0x20,0x5f,0x35,0x32,0x32,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x35,0x30,0x38,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,
    0x20,0x67,0x65,0x74,0x5f,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x28,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x76,0x5f,0x70,0x6f,0x73,0x2e,0x78,0x20,0x3c,
    0x20,0x30,0x2e,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x76,0x5f,0x6e,
    0x72,0x6d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,
    0x74,0x65,0x72,0x69,0x61,0x6c,0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6d,0x61,0x74,0x65,0x72,0x69,0x61,0x6c,
    0x5f,0x69,0x6e,0x66,0x6f,0x5f,0x74,0x28,0x5f,0x35,0x30,0x31,0x2c,0x20,0x5f,0x35,
    0x33,0x36,0x2c,0x20,0x5f,0x35,0x30,0x31,0x20,0x2a,0x20,0x5f,0x35,0x30,0x31,0x2c,
    0x20,0x28,0x5f,0x35,0x32,0x32,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,
    0x39,0x35,0x39,0x39,0x39,0x39,0x39,0x37,0x38,0x35,0x34,0x32,0x33,0x32,0x37,0x38,
    0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,
    0x30,0x20,0x2d,0x20,0x5f,0x35,0x30,0x38,0x29,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x6d,0x61,0x78,0x28,0x6d,0x61,0x78,0x28,0x5f,0x35,
    0x33,0x36,0x2e,0x78,0x2c,0x20,0x5f,0x35,0x33,0x36,0x2e,0x79,0x29,0x2c,0x20,0x5f,
    0x35,0x33,0x36,0x2e,0x7a,0x29,0x20,0x2a,0x20,0x35,0x30,0x2e,0x30,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2c,0x20,0x5f,0x35,0x33,0x36,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x65,0x79,0x65,0x5f,
    0x70,0x6f,0x73,0x20,0x2d,0x20,0x76,0x5f,0x70,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x61,
    0x70,0x70,0x6c,0x79,0x5f,0x70,0x6f,0x69,0x6e,0x74,0x5f,0x6c,0x69,0x67,0x68,0x74,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x20,0x2a,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x28,0x6f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x5f,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2c,0x20,0x76,0x5f,0x75,0x76,0x29,0x2e,0x78,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x34,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x65,0x6d,0x69,
    0x73,0x73,0x69,0x76,0x65,0x5f,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x2c,0x20,0x76,
    0x5f,0x75,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x36,0x30,0x37,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x30,0x38,0x20,0x3d,0x20,0x5f,0x36,0x30,
    0x37,0x20,0x2b,0x20,0x28,0x73,0x72,0x67,0x62,0x5f,0x74,0x6f,0x5f,0x6c,0x69,0x6e,
    0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,0x2e,0x78,0x79,0x7a,
    0x20,0x2a,0x20,0x6d,0x65,0x74,0x61,0x6c,0x6c,0x69,0x63,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x36,0x30,0x38,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x72,0x61,0x67,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x5f,0x36,0x30,0x38,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x00,
};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before multipass-pbr.glsl.h"
#endif
static inline const sg_shader_desc* offscreen_pbr_shader_desc(void) {
  if (sg_query_backend() == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "vertex_pos";
      desc.attrs[1].name = "vertex_color";
      desc.attrs[2].name = "vertex_normal";
      desc.attrs[3].name = "vertex_texcoord";
      desc.vs.source = vs_pbr_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
      desc.fs.source = metallic_fs_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 32;
      desc.fs.uniform_blocks[0].uniforms[0].name = "light_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 2;
      desc.fs.uniform_blocks[1].size = 48;
      desc.fs.uniform_blocks[1].uniforms[0].name = "metallic_params";
      desc.fs.uniform_blocks[1].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[1].uniforms[0].array_count = 3;
      desc.fs.images[0].name = "normal_texture";
      desc.fs.images[0].type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "metallic_roughness_texture";
      desc.fs.images[1].type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "base_color_texture";
      desc.fs.images[2].type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[3].name = "occlusion_texture";
      desc.fs.images[3].type = SG_IMAGETYPE_2D;
      desc.fs.images[3].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[4].name = "emissive_texture";
      desc.fs.images[4].type = SG_IMAGETYPE_2D;
      desc.fs.images[4].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "offscreen_pbr_shader";
    };
    return &desc;
  }
  return 0;
}
