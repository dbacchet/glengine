#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Overview:

        Shader program 'offscreen_pbr_ibl':
            Get shader desc: offscreen_pbr_ibl_shader_desc()
            Vertex shader: vs_pbr
                Attribute slots:
                    ATTR_vs_pbr_a_Position = 0
                    ATTR_vs_pbr_a_Color = 1
                    ATTR_vs_pbr_a_Normal = 2
                    ATTR_vs_pbr_a_UV1 = 3
                Uniform block 'vs_params':
                    C struct: vs_params_t
                    Bind slot: SLOT_vs_params = 0
            Fragment shader: fs_pbr
                Uniform block 'fs_params':
                    C struct: fs_params_t
                    Bind slot: SLOT_fs_params = 0
                Image 'tNormal':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tNormal = 0
                Image 'tLUT':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tLUT = 1
                Image 'tEnvDiffuse':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tEnvDiffuse = 2
                Image 'tEnvSpecular':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tEnvSpecular = 3
                Image 'tBaseColor':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tBaseColor = 4
                Image 'tRMO':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tRMO = 5
                Image 'tEmissive':
                    Type: SG_IMAGETYPE_2D
                    Component Type: SG_SAMPLERTYPE_FLOAT
                    Bind slot: SLOT_tEmissive = 6


    Shader descriptor structs:

        sg_shader offscreen_pbr_ibl = sg_make_shader(offscreen_pbr_ibl_shader_desc());

    Vertex attribute locations for vertex shader 'vs_pbr':

        sg_pipeline pip = sg_make_pipeline(&(sg_pipeline_desc){
            .layout = {
                .attrs = {
                    [ATTR_vs_pbr_a_Position] = { ... },
                    [ATTR_vs_pbr_a_Color] = { ... },
                    [ATTR_vs_pbr_a_Normal] = { ... },
                    [ATTR_vs_pbr_a_UV1] = { ... },
                },
            },
            ...});

    Image bind slots, use as index in sg_bindings.vs_images[] or .fs_images[]

        SLOT_tNormal = 0;
        SLOT_tLUT = 1;
        SLOT_tEnvDiffuse = 2;
        SLOT_tEnvSpecular = 3;
        SLOT_tBaseColor = 4;
        SLOT_tRMO = 5;
        SLOT_tEmissive = 6;

    Bind slot and C-struct for uniform block 'vs_params':

        vs_params_t vs_params = {
            .model = ...;
            .view = ...;
            .projection = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_vs_params, &vs_params, sizeof(vs_params));

    Bind slot and C-struct for uniform block 'fs_params':

        fs_params_t fs_params = {
            .viewMatrix = ...;
            .uBaseColor = ...;
            .uAlpha = ...;
            .uMetallic = ...;
            .uRoughness = ...;
            .uOcclusion = ...;
            .uNormalScale = ...;
            .uNormalUVScale = ...;
            .uEmissive = ...;
            .uEnvSpecular = ...;
            .uLightDirection = ...;
            .uLightColor = ...;
        };
        sg_apply_uniforms(SG_SHADERSTAGE_[VS|FS], SLOT_fs_params, &fs_params, sizeof(fs_params));

*/
#include <stdint.h>
#include <stdbool.h>
#if !defined(SOKOL_SHDC_ALIGN)
  #if defined(_MSC_VER)
    #define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
  #else
    #define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
  #endif
#endif
#define ATTR_vs_pbr_a_Position (0)
#define ATTR_vs_pbr_a_Color (1)
#define ATTR_vs_pbr_a_Normal (2)
#define ATTR_vs_pbr_a_UV1 (3)
#define SLOT_tNormal (0)
#define SLOT_tLUT (1)
#define SLOT_tEnvDiffuse (2)
#define SLOT_tEnvSpecular (3)
#define SLOT_tBaseColor (4)
#define SLOT_tRMO (5)
#define SLOT_tEmissive (6)
#define SLOT_vs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_params_t {
    math::Matrix4f model;
    math::Matrix4f view;
    math::Matrix4f projection;
} vs_params_t;
#pragma pack(pop)
#define SLOT_fs_params (0)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_params_t {
    math::Matrix4f viewMatrix;
    math::Vector3f uBaseColor;
    float uAlpha;
    float uMetallic;
    float uRoughness;
    float uOcclusion;
    float uNormalScale;
    float uNormalUVScale;
    float uEmissive;
    float uEnvSpecular;
    uint8_t _pad_108[4];
    math::Vector3f uLightDirection;
    uint8_t _pad_124[4];
    math::Vector3f uLightColor;
    uint8_t _pad_140[4];
} fs_params_t;
#pragma pack(pop)
/*
    #version 330
    
    uniform vec4 vs_params[12];
    layout(location = 0) in vec4 a_Position;
    out vec3 vMPos;
    out vec2 vUv;
    layout(location = 3) in vec2 a_UV1;
    out vec3 vNormal;
    layout(location = 2) in vec3 a_Normal;
    out vec3 v_eye_pos;
    layout(location = 1) in vec4 a_Color;
    
    void main()
    {
        mat4 _19 = mat4(vs_params[0], vs_params[1], vs_params[2], vs_params[3]);
        vec4 _30 = _19 * vec4(a_Position.xyz, 1.0);
        vMPos = vec3(_30.xyz) / vec3(_30.w);
        vUv = a_UV1;
        vNormal = normalize(transpose(inverse(_19)) * vec4(normalize(a_Normal), 1.0)).xyz;
        mat4 _74 = mat4(vs_params[4], vs_params[5], vs_params[6], vs_params[7]);
        v_eye_pos = inverse(_74)[3].xyz;
        gl_Position = (mat4(vs_params[8], vs_params[9], vs_params[10], vs_params[11]) * _74) * _30;
    }
    
*/
static const char vs_pbr_source_glsl330[763] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x32,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,
    0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,
    0x6e,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4d,0x50,0x6f,
    0x73,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x55,0x76,0x3b,
    0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x33,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x61,0x5f,
    0x55,0x56,0x31,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4e,
    0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,
    0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x32,0x29,0x20,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x61,0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x5f,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,
    0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,
    0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x34,0x20,0x61,
    0x5f,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,
    0x5f,0x31,0x39,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x31,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x32,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,
    0x5d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,
    0x20,0x3d,0x20,0x5f,0x31,0x39,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x61,0x5f,
    0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x4d,0x50,0x6f,0x73,0x20,0x3d,0x20,
    0x76,0x65,0x63,0x33,0x28,0x5f,0x33,0x30,0x2e,0x78,0x79,0x7a,0x29,0x20,0x2f,0x20,
    0x76,0x65,0x63,0x33,0x28,0x5f,0x33,0x30,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x55,0x76,0x20,0x3d,0x20,0x61,0x5f,0x55,0x56,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x74,0x72,0x61,0x6e,0x73,0x70,0x6f,0x73,0x65,0x28,
    0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x31,0x39,0x29,0x29,0x20,0x2a,0x20,
    0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x61,
    0x5f,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x2e,
    0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x5f,0x37,
    0x34,0x20,0x3d,0x20,0x6d,0x61,0x74,0x34,0x28,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x35,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,
    0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x5f,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,0x20,
    0x3d,0x20,0x69,0x6e,0x76,0x65,0x72,0x73,0x65,0x28,0x5f,0x37,0x34,0x29,0x5b,0x33,
    0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x28,0x6d,0x61,0x74,0x34,0x28,0x76,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2c,0x20,0x76,0x73,0x5f,
    0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x31,0x30,0x5d,0x2c,0x20,0x76,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x31,0x31,0x5d,0x29,0x20,0x2a,0x20,0x5f,0x37,0x34,0x29,0x20,
    0x2a,0x20,0x5f,0x33,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 330
    
    uniform vec4 fs_params[9];
    uniform sampler2D tNormal;
    uniform sampler2D tLUT;
    uniform sampler2D tEnvDiffuse;
    uniform sampler2D tEnvSpecular;
    uniform sampler2D tBaseColor;
    uniform sampler2D tRMO;
    uniform sampler2D tEmissive;
    
    in vec3 vMPos;
    in vec2 vUv;
    in vec3 vNormal;
    in vec3 v_eye_pos;
    layout(location = 0) out vec4 FragColor;
    
    vec4 SRGBtoLinear(vec4 srgb)
    {
        return vec4(pow(srgb.xyz, vec3(2.2000000476837158203125)), srgb.w);
    }
    
    vec3 getNormal()
    {
        vec3 _103 = dFdx(vMPos);
        vec3 _106 = dFdy(vMPos);
        vec2 _112 = dFdx(vUv);
        vec2 _115 = dFdy(vUv);
        vec3 _185 = (texture(tNormal, vUv * fs_params[6].x).xyz * 2.0) - vec3(1.0);
        vec2 _191 = _185.xy * fs_params[5].w;
        return normalize((vec4(normalize(mat3(normalize((_103 * _115.y) - (_106 * _112.y)), normalize(((-_103) * _115.x) + (_106 * _112.x)), normalize(vNormal)) * vec3(_191.x, _191.y, _185.z)), 0.0) * mat4(fs_params[0], fs_params[1], fs_params[2], fs_params[3])).xyz);
    }
    
    vec3 specularReflection(vec3 specularEnvR0, vec3 specularEnvR90, float VdH)
    {
        return specularEnvR0 + ((specularEnvR90 - specularEnvR0) * pow(clamp(1.0 - VdH, 0.0, 1.0), 5.0));
    }
    
    float geometricOcclusion(float NdL, float NdV, float roughness)
    {
        float _234 = roughness * roughness;
        float _238 = 1.0 - _234;
        return ((2.0 * NdL) / (NdL + sqrt(_234 + (_238 * (NdL * NdL))))) * ((2.0 * NdV) / (NdV + sqrt(_234 + (_238 * (NdV * NdV)))));
    }
    
    float microfacetDistribution(float roughness, float NdH)
    {
        float _274 = roughness * roughness;
        float _283 = (((NdH * _274) - NdH) * NdH) + 1.0;
        return _274 / ((3.1415927410125732421875 * _283) * _283);
    }
    
    vec2 cartesianToPolar(vec3 n)
    {
        vec2 uv;
        vec2 _706 = uv;
        _706.x = (atan(n.z, n.x) * 0.15915493667125701904296875) + 0.5;
        vec2 _708 = _706;
        _708.y = (asin(n.y) * 0.3183098733425140380859375) + 0.5;
        uv = _708;
        return _708;
    }
    
    vec4 RGBMToLinear(vec4 value)
    {
        return vec4((value.xyz * value.w) * 6.0, 1.0);
    }
    
    void getIBLContribution(out vec3 diffuse, inout vec3 specular, float NdV, float roughness, vec3 n, vec3 reflection, vec3 diffuseColor, vec3 specularColor)
    {
        vec4 param = texture(tLUT, vec2(NdV, roughness));
        vec4 _323 = SRGBtoLinear(param);
        vec3 param_1 = n;
        vec4 param_2 = texture(tEnvDiffuse, cartesianToPolar(param_1));
        float _337 = roughness * 6.0;
        float _340 = floor(_337);
        float _344 = min(6.0, _340 + 1.0);
        vec3 param_3 = reflection;
        vec2 _351 = cartesianToPolar(param_3);
        vec2 _711 = _351;
        _711.y = _351.y * 0.5;
        vec2 _364 = _711 / vec2(pow(2.0, _340));
        vec2 _714 = _364;
        _714.y = _364.y + (1.0 - exp((-0.693147182464599609375) * _340));
        vec2 _378 = _711 / vec2(pow(2.0, _344));
        vec2 _717 = _378;
        _717.y = _378.y + (1.0 - exp((-0.693147182464599609375) * _344));
        vec4 param_4 = texture(tEnvSpecular, _714);
        vec4 param_5 = texture(tEnvSpecular, _717);
        diffuse = RGBMToLinear(param_2).xyz * diffuseColor;
        specular = mix(RGBMToLinear(param_4).xyz, RGBMToLinear(param_5).xyz, vec3(_337 - _340)) * (((specularColor * _323.x) + vec3(_323.y)) + vec3(pow(1.0 - roughness, 2.0) * 0.0500000007450580596923828125));
        specular *= fs_params[6].z;
    }
    
    vec3 linearToSRGB(vec3 color)
    {
        return pow(color, vec3(0.4545454680919647216796875));
    }
    
    void main()
    {
        vec4 param = texture(tBaseColor, vUv);
        vec3 _447 = SRGBtoLinear(param).xyz * fs_params[4].xyz;
        vec4 _452 = texture(tRMO, vUv);
        float _461 = clamp(_452.y * fs_params[5].y, 0.039999999105930328369140625, 1.0);
        float _469 = clamp(_452.z * fs_params[5].x, 0.039999999105930328369140625, 1.0);
        vec3 _480 = (_447 * vec3(0.959999978542327880859375)) * (1.0 - _469);
        vec3 _486 = mix(vec3(0.039999999105930328369140625), _447, vec3(_469));
        vec3 _503 = getNormal();
        vec3 _509 = normalize(v_eye_pos - vMPos);
        vec3 _514 = normalize(fs_params[7].xyz);
        vec3 _519 = normalize(_514 + _509);
        float _531 = clamp(dot(_503, _514), 0.001000000047497451305389404296875, 1.0);
        float _537 = clamp(abs(dot(_503, _509)), 0.001000000047497451305389404296875, 1.0);
        vec3 param_1 = _486;
        vec3 param_2 = vec3(clamp(max(max(_486.x, _486.y), _486.z) * 25.0, 0.0, 1.0));
        float param_3 = clamp(dot(_509, _519), 0.0, 1.0);
        vec3 _560 = specularReflection(param_1, param_2, param_3);
        float param_4 = _531;
        float param_5 = _537;
        float param_6 = _461;
        float param_7 = _461;
        float param_8 = clamp(dot(_503, _519), 0.0, 1.0);
        vec3 _595 = ((_560 * geometricOcclusion(param_4, param_5, param_6)) * microfacetDistribution(param_7, param_8)) / vec3((4.0 * _531) * _537);
        vec3 color = (fs_params[8].xyz * _531) * (((vec3(1.0) - _560) * (_480 * vec3(0.3183098733425140380859375))) + _595);
        float alpha = max(1.0, max(max(_595.x, _595.y), _595.z));
        vec3 diffuseIBL;
        vec3 param_9 = diffuseIBL;
        vec3 specularIBL;
        vec3 param_10 = specularIBL;
        float param_11 = _537;
        float param_12 = _461;
        vec3 param_13 = _503;
        vec3 param_14 = normalize(reflect(-_509, _503));
        vec3 param_15 = _480;
        vec3 param_16 = _486;
        getIBLContribution(param_9, param_10, param_11, param_12, param_13, param_14, param_15, param_16);
        diffuseIBL = param_9;
        specularIBL = param_10;
        vec3 _642 = color + (param_9 + param_10);
        alpha = max(alpha, max(max(param_10.x, param_10.y), param_10.z));
        color = mix(_642, _642, vec3(fs_params[5].z));
        vec4 param_17 = texture(tEmissive, vUv);
        vec3 _673 = color;
        vec3 _674 = _673 + (SRGBtoLinear(param_17).xyz * fs_params[6].y);
        color = _674;
        vec3 param_18 = _674;
        vec3 _679 = linearToSRGB(param_18);
        FragColor = vec4(_679.x, _679.y, _679.z, FragColor.w);
        FragColor.w = alpha * fs_params[4].w;
    }
    
*/
static const char fs_pbr_source_glsl330[5760] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x66,0x73,0x5f,0x70,0x61,
    0x72,0x61,0x6d,0x73,0x5b,0x39,0x5d,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x4e,0x6f,0x72,0x6d,
    0x61,0x6c,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x4c,0x55,0x54,0x3b,0x0a,0x75,0x6e,0x69,0x66,
    0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x45,
    0x6e,0x76,0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x45,0x6e,
    0x76,0x53,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,
    0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x42,0x61,
    0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x52,0x4d,0x4f,0x3b,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x20,0x74,0x45,0x6d,0x69,0x73,0x73,0x69,0x76,0x65,0x3b,0x0a,0x0a,0x69,
    0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x4d,0x50,0x6f,0x73,0x3b,0x0a,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x55,0x76,0x3b,0x0a,0x69,0x6e,0x20,0x76,0x65,
    0x63,0x33,0x20,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x3b,0x0a,0x69,0x6e,0x20,0x76,
    0x65,0x63,0x33,0x20,0x76,0x5f,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x6c,
    0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x53,0x52,
    0x47,0x42,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x76,0x65,0x63,0x34,0x20,
    0x73,0x72,0x67,0x62,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x77,0x28,0x73,0x72,0x67,0x62,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x32,0x2e,0x32,0x30,0x30,
    0x30,0x30,0x30,0x30,0x34,0x37,0x36,0x38,0x33,0x37,0x31,0x35,0x38,0x32,0x30,0x33,
    0x31,0x32,0x35,0x29,0x29,0x2c,0x20,0x73,0x72,0x67,0x62,0x2e,0x77,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x67,0x65,0x74,0x4e,0x6f,0x72,0x6d,0x61,
    0x6c,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x31,0x30,0x33,0x20,0x3d,0x20,0x64,0x46,0x64,0x78,0x28,0x76,0x4d,0x50,0x6f,0x73,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x30,0x36,
    0x20,0x3d,0x20,0x64,0x46,0x64,0x79,0x28,0x76,0x4d,0x50,0x6f,0x73,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x31,0x31,0x32,0x20,0x3d,0x20,
    0x64,0x46,0x64,0x78,0x28,0x76,0x55,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x5f,0x31,0x31,0x35,0x20,0x3d,0x20,0x64,0x46,0x64,0x79,0x28,
    0x76,0x55,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x31,0x38,0x35,0x20,0x3d,0x20,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,
    0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x2c,0x20,0x76,0x55,0x76,0x20,0x2a,0x20,0x66,0x73,
    0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2e,0x78,0x29,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x32,0x2e,0x30,0x29,0x20,0x2d,0x20,0x76,0x65,0x63,0x33,0x28,
    0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,
    0x31,0x39,0x31,0x20,0x3d,0x20,0x5f,0x31,0x38,0x35,0x2e,0x78,0x79,0x20,0x2a,0x20,
    0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2e,0x77,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x28,0x76,0x65,0x63,0x34,0x28,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x6d,0x61,0x74,0x33,0x28,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x28,0x5f,0x31,0x30,0x33,0x20,0x2a,0x20,0x5f,0x31,0x31,0x35,
    0x2e,0x79,0x29,0x20,0x2d,0x20,0x28,0x5f,0x31,0x30,0x36,0x20,0x2a,0x20,0x5f,0x31,
    0x31,0x32,0x2e,0x79,0x29,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,
    0x65,0x28,0x28,0x28,0x2d,0x5f,0x31,0x30,0x33,0x29,0x20,0x2a,0x20,0x5f,0x31,0x31,
    0x35,0x2e,0x78,0x29,0x20,0x2b,0x20,0x28,0x5f,0x31,0x30,0x36,0x20,0x2a,0x20,0x5f,
    0x31,0x31,0x32,0x2e,0x78,0x29,0x29,0x2c,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x76,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x29,0x29,0x20,0x2a,0x20,0x76,
    0x65,0x63,0x33,0x28,0x5f,0x31,0x39,0x31,0x2e,0x78,0x2c,0x20,0x5f,0x31,0x39,0x31,
    0x2e,0x79,0x2c,0x20,0x5f,0x31,0x38,0x35,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x29,0x20,0x2a,0x20,0x6d,0x61,0x74,0x34,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,
    0x61,0x6d,0x73,0x5b,0x30,0x5d,0x2c,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x5b,0x31,0x5d,0x2c,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x32,0x5d,0x2c,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x33,0x5d,
    0x29,0x29,0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,
    0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x52,0x65,0x66,0x6c,0x65,0x63,0x74,
    0x69,0x6f,0x6e,0x28,0x76,0x65,0x63,0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x45,0x6e,0x76,0x52,0x30,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x70,0x65,
    0x63,0x75,0x6c,0x61,0x72,0x45,0x6e,0x76,0x52,0x39,0x30,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x56,0x64,0x48,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x45,0x6e,0x76,
    0x52,0x30,0x20,0x2b,0x20,0x28,0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x45,
    0x6e,0x76,0x52,0x39,0x30,0x20,0x2d,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,
    0x45,0x6e,0x76,0x52,0x30,0x29,0x20,0x2a,0x20,0x70,0x6f,0x77,0x28,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x56,0x64,0x48,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x2c,0x20,0x35,0x2e,0x30,0x29,0x29,0x3b,0x0a,
    0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x67,0x65,0x6f,0x6d,0x65,0x74,0x72,
    0x69,0x63,0x4f,0x63,0x63,0x6c,0x75,0x73,0x69,0x6f,0x6e,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x4e,0x64,0x4c,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x4e,0x64,0x56,
    0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,
    0x73,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x32,0x33,0x34,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x20,
    0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x33,0x38,0x20,0x3d,0x20,0x31,0x2e,
    0x30,0x20,0x2d,0x20,0x5f,0x32,0x33,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,
    0x74,0x75,0x72,0x6e,0x20,0x28,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,0x4e,0x64,0x4c,
    0x29,0x20,0x2f,0x20,0x28,0x4e,0x64,0x4c,0x20,0x2b,0x20,0x73,0x71,0x72,0x74,0x28,
    0x5f,0x32,0x33,0x34,0x20,0x2b,0x20,0x28,0x5f,0x32,0x33,0x38,0x20,0x2a,0x20,0x28,
    0x4e,0x64,0x4c,0x20,0x2a,0x20,0x4e,0x64,0x4c,0x29,0x29,0x29,0x29,0x29,0x20,0x2a,
    0x20,0x28,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,0x4e,0x64,0x56,0x29,0x20,0x2f,0x20,
    0x28,0x4e,0x64,0x56,0x20,0x2b,0x20,0x73,0x71,0x72,0x74,0x28,0x5f,0x32,0x33,0x34,
    0x20,0x2b,0x20,0x28,0x5f,0x32,0x33,0x38,0x20,0x2a,0x20,0x28,0x4e,0x64,0x56,0x20,
    0x2a,0x20,0x4e,0x64,0x56,0x29,0x29,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x6d,0x69,0x63,0x72,0x6f,0x66,0x61,0x63,0x65,0x74,0x44,
    0x69,0x73,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x28,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x4e,0x64,0x48,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x37,0x34,0x20,0x3d,0x20,0x72,0x6f,0x75,0x67,0x68,
    0x6e,0x65,0x73,0x73,0x20,0x2a,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x38,0x33,
    0x20,0x3d,0x20,0x28,0x28,0x28,0x4e,0x64,0x48,0x20,0x2a,0x20,0x5f,0x32,0x37,0x34,
    0x29,0x20,0x2d,0x20,0x4e,0x64,0x48,0x29,0x20,0x2a,0x20,0x4e,0x64,0x48,0x29,0x20,
    0x2b,0x20,0x31,0x2e,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,
    0x6e,0x20,0x5f,0x32,0x37,0x34,0x20,0x2f,0x20,0x28,0x28,0x33,0x2e,0x31,0x34,0x31,
    0x35,0x39,0x32,0x37,0x34,0x31,0x30,0x31,0x32,0x35,0x37,0x33,0x32,0x34,0x32,0x31,
    0x38,0x37,0x35,0x20,0x2a,0x20,0x5f,0x32,0x38,0x33,0x29,0x20,0x2a,0x20,0x5f,0x32,
    0x38,0x33,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x32,0x20,0x63,0x61,0x72,
    0x74,0x65,0x73,0x69,0x61,0x6e,0x54,0x6f,0x50,0x6f,0x6c,0x61,0x72,0x28,0x76,0x65,
    0x63,0x33,0x20,0x6e,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,
    0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x37,
    0x30,0x36,0x20,0x3d,0x20,0x75,0x76,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x37,0x30,
    0x36,0x2e,0x78,0x20,0x3d,0x20,0x28,0x61,0x74,0x61,0x6e,0x28,0x6e,0x2e,0x7a,0x2c,
    0x20,0x6e,0x2e,0x78,0x29,0x20,0x2a,0x20,0x30,0x2e,0x31,0x35,0x39,0x31,0x35,0x34,
    0x39,0x33,0x36,0x36,0x37,0x31,0x32,0x35,0x37,0x30,0x31,0x39,0x30,0x34,0x32,0x39,
    0x36,0x38,0x37,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x37,0x30,0x38,0x20,0x3d,0x20,0x5f,0x37,0x30,
    0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x37,0x30,0x38,0x2e,0x79,0x20,0x3d,0x20,
    0x28,0x61,0x73,0x69,0x6e,0x28,0x6e,0x2e,0x79,0x29,0x20,0x2a,0x20,0x30,0x2e,0x33,
    0x31,0x38,0x33,0x30,0x39,0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,0x30,0x33,
    0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,0x29,0x20,0x2b,0x20,0x30,0x2e,0x35,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x75,0x76,0x20,0x3d,0x20,0x5f,0x37,0x30,0x38,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x5f,0x37,0x30,0x38,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x34,0x20,0x52,0x47,0x42,0x4d,0x54,0x6f,0x4c,
    0x69,0x6e,0x65,0x61,0x72,0x28,0x76,0x65,0x63,0x34,0x20,0x76,0x61,0x6c,0x75,0x65,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,
    0x65,0x63,0x34,0x28,0x28,0x76,0x61,0x6c,0x75,0x65,0x2e,0x78,0x79,0x7a,0x20,0x2a,
    0x20,0x76,0x61,0x6c,0x75,0x65,0x2e,0x77,0x29,0x20,0x2a,0x20,0x36,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x67,
    0x65,0x74,0x49,0x42,0x4c,0x43,0x6f,0x6e,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,
    0x6e,0x28,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,
    0x73,0x65,0x2c,0x20,0x69,0x6e,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x4e,
    0x64,0x56,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,
    0x65,0x73,0x73,0x2c,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x2c,0x20,0x76,0x65,0x63,
    0x33,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x43,0x6f,
    0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,
    0x74,0x4c,0x55,0x54,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x4e,0x64,0x56,0x2c,0x20,
    0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x32,0x33,0x20,0x3d,0x20,0x53,0x52,0x47,
    0x42,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x74,0x45,0x6e,0x76,0x44,0x69,0x66,0x66,0x75,0x73,0x65,0x2c,0x20,
    0x63,0x61,0x72,0x74,0x65,0x73,0x69,0x61,0x6e,0x54,0x6f,0x50,0x6f,0x6c,0x61,0x72,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x33,0x37,0x20,0x3d,0x20,0x72,0x6f,0x75,
    0x67,0x68,0x6e,0x65,0x73,0x73,0x20,0x2a,0x20,0x36,0x2e,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x30,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x6f,0x72,0x28,0x5f,0x33,0x33,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x33,0x34,0x34,0x20,0x3d,0x20,0x6d,0x69,0x6e,
    0x28,0x36,0x2e,0x30,0x2c,0x20,0x5f,0x33,0x34,0x30,0x20,0x2b,0x20,0x31,0x2e,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x20,0x3d,0x20,0x72,0x65,0x66,0x6c,0x65,0x63,0x74,0x69,0x6f,0x6e,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x35,0x31,0x20,
    0x3d,0x20,0x63,0x61,0x72,0x74,0x65,0x73,0x69,0x61,0x6e,0x54,0x6f,0x50,0x6f,0x6c,
    0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x37,0x31,0x31,0x20,0x3d,0x20,0x5f,0x33,0x35,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x37,0x31,0x31,0x2e,0x79,0x20,0x3d,0x20,
    0x5f,0x33,0x35,0x31,0x2e,0x79,0x20,0x2a,0x20,0x30,0x2e,0x35,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x36,0x34,0x20,0x3d,0x20,0x5f,0x37,
    0x31,0x31,0x20,0x2f,0x20,0x76,0x65,0x63,0x32,0x28,0x70,0x6f,0x77,0x28,0x32,0x2e,
    0x30,0x2c,0x20,0x5f,0x33,0x34,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x5f,0x37,0x31,0x34,0x20,0x3d,0x20,0x5f,0x33,0x36,0x34,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x5f,0x37,0x31,0x34,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x33,
    0x36,0x34,0x2e,0x79,0x20,0x2b,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x65,0x78,
    0x70,0x28,0x28,0x2d,0x30,0x2e,0x36,0x39,0x33,0x31,0x34,0x37,0x31,0x38,0x32,0x34,
    0x36,0x34,0x35,0x39,0x39,0x36,0x30,0x39,0x33,0x37,0x35,0x29,0x20,0x2a,0x20,0x5f,
    0x33,0x34,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,
    0x5f,0x33,0x37,0x38,0x20,0x3d,0x20,0x5f,0x37,0x31,0x31,0x20,0x2f,0x20,0x76,0x65,
    0x63,0x32,0x28,0x70,0x6f,0x77,0x28,0x32,0x2e,0x30,0x2c,0x20,0x5f,0x33,0x34,0x34,
    0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x5f,0x37,0x31,
    0x37,0x20,0x3d,0x20,0x5f,0x33,0x37,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x5f,0x37,
    0x31,0x37,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x33,0x37,0x38,0x2e,0x79,0x20,0x2b,0x20,
    0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x65,0x78,0x70,0x28,0x28,0x2d,0x30,0x2e,0x36,
    0x39,0x33,0x31,0x34,0x37,0x31,0x38,0x32,0x34,0x36,0x34,0x35,0x39,0x39,0x36,0x30,
    0x39,0x33,0x37,0x35,0x29,0x20,0x2a,0x20,0x5f,0x33,0x34,0x34,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x45,0x6e,0x76,0x53,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x5f,0x37,0x31,0x34,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x45,0x6e,0x76,0x53,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x2c,0x20,0x5f,0x37,0x31,0x37,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x20,0x3d,0x20,0x52,0x47,
    0x42,0x4d,0x54,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x29,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x52,0x47,0x42,0x4d,0x54,
    0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x29,
    0x2e,0x78,0x79,0x7a,0x2c,0x20,0x52,0x47,0x42,0x4d,0x54,0x6f,0x4c,0x69,0x6e,0x65,
    0x61,0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x35,0x29,0x2e,0x78,0x79,0x7a,0x2c,
    0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x33,0x33,0x37,0x20,0x2d,0x20,0x5f,0x33,0x34,
    0x30,0x29,0x29,0x20,0x2a,0x20,0x28,0x28,0x28,0x73,0x70,0x65,0x63,0x75,0x6c,0x61,
    0x72,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x2a,0x20,0x5f,0x33,0x32,0x33,0x2e,0x78,0x29,
    0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x33,0x32,0x33,0x2e,0x79,0x29,0x29,
    0x20,0x2b,0x20,0x76,0x65,0x63,0x33,0x28,0x70,0x6f,0x77,0x28,0x31,0x2e,0x30,0x20,
    0x2d,0x20,0x72,0x6f,0x75,0x67,0x68,0x6e,0x65,0x73,0x73,0x2c,0x20,0x32,0x2e,0x30,
    0x29,0x20,0x2a,0x20,0x30,0x2e,0x30,0x35,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x37,
    0x34,0x35,0x30,0x35,0x38,0x30,0x35,0x39,0x36,0x39,0x32,0x33,0x38,0x32,0x38,0x31,
    0x32,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x20,0x2a,0x3d,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,
    0x36,0x5d,0x2e,0x7a,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x65,0x63,0x33,0x20,0x6c,0x69,
    0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x52,0x47,0x42,0x28,0x76,0x65,0x63,0x33,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x70,0x6f,0x77,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,
    0x65,0x63,0x33,0x28,0x30,0x2e,0x34,0x35,0x34,0x35,0x34,0x35,0x34,0x36,0x38,0x30,
    0x39,0x31,0x39,0x36,0x34,0x37,0x32,0x31,0x36,0x37,0x39,0x36,0x38,0x37,0x35,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x42,0x61,
    0x73,0x65,0x43,0x6f,0x6c,0x6f,0x72,0x2c,0x20,0x76,0x55,0x76,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x34,0x37,0x20,0x3d,0x20,0x53,
    0x52,0x47,0x42,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,0x72,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x29,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x34,0x35,0x32,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,
    0x72,0x65,0x28,0x74,0x52,0x4d,0x4f,0x2c,0x20,0x76,0x55,0x76,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,0x36,0x31,0x20,0x3d,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x34,0x35,0x32,0x2e,0x79,0x20,0x2a,0x20,0x66,
    0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,0x2e,0x79,0x2c,0x20,0x30,
    0x2e,0x30,0x33,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x31,0x30,0x35,0x39,0x33,0x30,
    0x33,0x32,0x38,0x33,0x36,0x39,0x31,0x34,0x30,0x36,0x32,0x35,0x2c,0x20,0x31,0x2e,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x34,
    0x36,0x39,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x34,0x35,0x32,0x2e,
    0x7a,0x20,0x2a,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x35,0x5d,
    0x2e,0x78,0x2c,0x20,0x30,0x2e,0x30,0x33,0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x31,
    0x30,0x35,0x39,0x33,0x30,0x33,0x32,0x38,0x33,0x36,0x39,0x31,0x34,0x30,0x36,0x32,
    0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x34,0x38,0x30,0x20,0x3d,0x20,0x28,0x5f,0x34,0x34,0x37,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x39,0x35,0x39,0x39,0x39,0x39,0x39,0x37,
    0x38,0x35,0x34,0x32,0x33,0x32,0x37,0x38,0x38,0x30,0x38,0x35,0x39,0x33,0x37,0x35,
    0x29,0x29,0x20,0x2a,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x34,0x36,0x39,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x34,0x38,0x36,
    0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x30,0x33,
    0x39,0x39,0x39,0x39,0x39,0x39,0x39,0x31,0x30,0x35,0x39,0x33,0x30,0x33,0x32,0x38,
    0x33,0x36,0x39,0x31,0x34,0x30,0x36,0x32,0x35,0x29,0x2c,0x20,0x5f,0x34,0x34,0x37,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x34,0x36,0x39,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x30,0x33,0x20,0x3d,0x20,0x67,
    0x65,0x74,0x4e,0x6f,0x72,0x6d,0x61,0x6c,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x30,0x39,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x76,0x5f,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,0x20,
    0x2d,0x20,0x76,0x4d,0x50,0x6f,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x35,0x31,0x34,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,
    0x69,0x7a,0x65,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x37,0x5d,
    0x2e,0x78,0x79,0x7a,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,
    0x5f,0x35,0x31,0x39,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,
    0x28,0x5f,0x35,0x31,0x34,0x20,0x2b,0x20,0x5f,0x35,0x30,0x39,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x33,0x31,0x20,0x3d,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x6f,0x74,0x28,0x5f,0x35,0x30,0x33,0x2c,0x20,
    0x5f,0x35,0x31,0x34,0x29,0x2c,0x20,0x30,0x2e,0x30,0x30,0x31,0x30,0x30,0x30,0x30,
    0x30,0x30,0x30,0x34,0x37,0x34,0x39,0x37,0x34,0x35,0x31,0x33,0x30,0x35,0x33,0x38,
    0x39,0x34,0x30,0x34,0x32,0x39,0x36,0x38,0x37,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x33,0x37,
    0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x61,0x62,0x73,0x28,0x64,0x6f,0x74,
    0x28,0x5f,0x35,0x30,0x33,0x2c,0x20,0x5f,0x35,0x30,0x39,0x29,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x30,0x31,0x30,0x30,0x30,0x30,0x30,0x30,0x30,0x34,0x37,0x34,0x39,0x37,
    0x34,0x35,0x31,0x33,0x30,0x35,0x33,0x38,0x39,0x34,0x30,0x34,0x32,0x39,0x36,0x38,
    0x37,0x35,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x34,0x38,
    0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x32,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x63,0x6c,0x61,0x6d,0x70,
    0x28,0x6d,0x61,0x78,0x28,0x6d,0x61,0x78,0x28,0x5f,0x34,0x38,0x36,0x2e,0x78,0x2c,
    0x20,0x5f,0x34,0x38,0x36,0x2e,0x79,0x29,0x2c,0x20,0x5f,0x34,0x38,0x36,0x2e,0x7a,
    0x29,0x20,0x2a,0x20,0x32,0x35,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,
    0x64,0x6f,0x74,0x28,0x5f,0x35,0x30,0x39,0x2c,0x20,0x5f,0x35,0x31,0x39,0x29,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x5f,0x35,0x36,0x30,0x20,0x3d,0x20,0x73,0x70,0x65,0x63,
    0x75,0x6c,0x61,0x72,0x52,0x65,0x66,0x6c,0x65,0x63,0x74,0x69,0x6f,0x6e,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x20,0x3d,0x20,0x5f,
    0x35,0x33,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x35,0x20,0x3d,0x20,0x5f,0x35,0x33,0x37,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,
    0x20,0x3d,0x20,0x5f,0x34,0x36,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x37,0x20,0x3d,0x20,0x5f,0x34,0x36,
    0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x38,0x20,0x3d,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x64,0x6f,0x74,
    0x28,0x5f,0x35,0x30,0x33,0x2c,0x20,0x5f,0x35,0x31,0x39,0x29,0x2c,0x20,0x30,0x2e,
    0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x35,0x39,0x35,0x20,0x3d,0x20,0x28,0x28,0x5f,0x35,0x36,0x30,0x20,
    0x2a,0x20,0x67,0x65,0x6f,0x6d,0x65,0x74,0x72,0x69,0x63,0x4f,0x63,0x63,0x6c,0x75,
    0x73,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x34,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x35,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x36,0x29,0x29,
    0x20,0x2a,0x20,0x6d,0x69,0x63,0x72,0x6f,0x66,0x61,0x63,0x65,0x74,0x44,0x69,0x73,
    0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x37,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x38,0x29,0x29,0x20,0x2f,0x20,0x76,
    0x65,0x63,0x33,0x28,0x28,0x34,0x2e,0x30,0x20,0x2a,0x20,0x5f,0x35,0x33,0x31,0x29,
    0x20,0x2a,0x20,0x5f,0x35,0x33,0x37,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x28,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x38,0x5d,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x5f,
    0x35,0x33,0x31,0x29,0x20,0x2a,0x20,0x28,0x28,0x28,0x76,0x65,0x63,0x33,0x28,0x31,
    0x2e,0x30,0x29,0x20,0x2d,0x20,0x5f,0x35,0x36,0x30,0x29,0x20,0x2a,0x20,0x28,0x5f,
    0x34,0x38,0x30,0x20,0x2a,0x20,0x76,0x65,0x63,0x33,0x28,0x30,0x2e,0x33,0x31,0x38,
    0x33,0x30,0x39,0x38,0x37,0x33,0x33,0x34,0x32,0x35,0x31,0x34,0x30,0x33,0x38,0x30,
    0x38,0x35,0x39,0x33,0x37,0x35,0x29,0x29,0x29,0x20,0x2b,0x20,0x5f,0x35,0x39,0x35,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x61,0x6c,0x70,
    0x68,0x61,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x31,0x2e,0x30,0x2c,0x20,0x6d,0x61,
    0x78,0x28,0x6d,0x61,0x78,0x28,0x5f,0x35,0x39,0x35,0x2e,0x78,0x2c,0x20,0x5f,0x35,
    0x39,0x35,0x2e,0x79,0x29,0x2c,0x20,0x5f,0x35,0x39,0x35,0x2e,0x7a,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x64,0x69,0x66,0x66,0x75,0x73,
    0x65,0x49,0x42,0x4c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x39,0x20,0x3d,0x20,0x64,0x69,0x66,0x66,0x75,0x73,0x65,
    0x49,0x42,0x4c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x73,0x70,
    0x65,0x63,0x75,0x6c,0x61,0x72,0x49,0x42,0x4c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x20,0x3d,0x20,0x73,
    0x70,0x65,0x63,0x75,0x6c,0x61,0x72,0x49,0x42,0x4c,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x20,0x3d,
    0x20,0x5f,0x35,0x33,0x37,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x32,0x20,0x3d,0x20,0x5f,0x34,0x36,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x33,0x20,0x3d,0x20,0x5f,0x35,0x30,0x33,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x34,0x20,0x3d,0x20,
    0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x72,0x65,0x66,0x6c,0x65,0x63,
    0x74,0x28,0x2d,0x5f,0x35,0x30,0x39,0x2c,0x20,0x5f,0x35,0x30,0x33,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,
    0x31,0x35,0x20,0x3d,0x20,0x5f,0x34,0x38,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x36,0x20,0x3d,0x20,0x5f,
    0x34,0x38,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x65,0x74,0x49,0x42,0x4c,0x43,
    0x6f,0x6e,0x74,0x72,0x69,0x62,0x75,0x74,0x69,0x6f,0x6e,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x39,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2c,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,
    0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x33,0x2c,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x31,0x34,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x35,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x64,0x69,0x66,0x66,0x75,0x73,0x65,0x49,0x42,0x4c,0x20,0x3d,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x70,0x65,0x63,0x75,0x6c,
    0x61,0x72,0x49,0x42,0x4c,0x20,0x3d,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x34,0x32,0x20,
    0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x2b,0x20,0x28,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x39,0x20,0x2b,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,
    0x61,0x6c,0x70,0x68,0x61,0x2c,0x20,0x6d,0x61,0x78,0x28,0x6d,0x61,0x78,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,0x2e,0x78,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x30,0x2e,0x79,0x29,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x30,
    0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,
    0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x36,0x34,0x32,0x2c,0x20,0x5f,0x36,0x34,0x32,
    0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,
    0x5b,0x35,0x5d,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x34,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x20,0x3d,0x20,0x74,0x65,0x78,
    0x74,0x75,0x72,0x65,0x28,0x74,0x45,0x6d,0x69,0x73,0x73,0x69,0x76,0x65,0x2c,0x20,
    0x76,0x55,0x76,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x36,0x37,0x33,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x37,0x34,0x20,0x3d,0x20,0x5f,0x36,0x37,
    0x33,0x20,0x2b,0x20,0x28,0x53,0x52,0x47,0x42,0x74,0x6f,0x4c,0x69,0x6e,0x65,0x61,
    0x72,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x37,0x29,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x66,0x73,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x2e,0x79,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,
    0x36,0x37,0x34,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x38,0x20,0x3d,0x20,0x5f,0x36,0x37,0x34,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x36,0x37,0x39,0x20,0x3d,0x20,0x6c,
    0x69,0x6e,0x65,0x61,0x72,0x54,0x6f,0x53,0x52,0x47,0x42,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x5f,0x36,0x37,0x39,
    0x2e,0x78,0x2c,0x20,0x5f,0x36,0x37,0x39,0x2e,0x79,0x2c,0x20,0x5f,0x36,0x37,0x39,
    0x2e,0x7a,0x2c,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,
    0x77,0x20,0x3d,0x20,0x61,0x6c,0x70,0x68,0x61,0x20,0x2a,0x20,0x66,0x73,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,0x5d,0x2e,0x77,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,

};
#if !defined(SOKOL_GFX_INCLUDED)
  #error "Please include sokol_gfx.h before pbr_ibl.glsl.h"
#endif
static inline const sg_shader_desc* offscreen_pbr_ibl_shader_desc(void) {
  if (sg_query_backend() == SG_BACKEND_GLCORE33) {
    static sg_shader_desc desc;
    static bool valid;
    if (!valid) {
      valid = true;
      desc.attrs[0].name = "a_Position";
      desc.attrs[1].name = "a_Color";
      desc.attrs[2].name = "a_Normal";
      desc.attrs[3].name = "a_UV1";
      desc.vs.source = vs_pbr_source_glsl330;
      desc.vs.entry = "main";
      desc.vs.uniform_blocks[0].size = 192;
      desc.vs.uniform_blocks[0].uniforms[0].name = "vs_params";
      desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.vs.uniform_blocks[0].uniforms[0].array_count = 12;
      desc.fs.source = fs_pbr_source_glsl330;
      desc.fs.entry = "main";
      desc.fs.uniform_blocks[0].size = 144;
      desc.fs.uniform_blocks[0].uniforms[0].name = "fs_params";
      desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
      desc.fs.uniform_blocks[0].uniforms[0].array_count = 9;
      desc.fs.images[0].name = "tNormal";
      desc.fs.images[0].type = SG_IMAGETYPE_2D;
      desc.fs.images[0].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[1].name = "tLUT";
      desc.fs.images[1].type = SG_IMAGETYPE_2D;
      desc.fs.images[1].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[2].name = "tEnvDiffuse";
      desc.fs.images[2].type = SG_IMAGETYPE_2D;
      desc.fs.images[2].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[3].name = "tEnvSpecular";
      desc.fs.images[3].type = SG_IMAGETYPE_2D;
      desc.fs.images[3].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[4].name = "tBaseColor";
      desc.fs.images[4].type = SG_IMAGETYPE_2D;
      desc.fs.images[4].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[5].name = "tRMO";
      desc.fs.images[5].type = SG_IMAGETYPE_2D;
      desc.fs.images[5].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.fs.images[6].name = "tEmissive";
      desc.fs.images[6].type = SG_IMAGETYPE_2D;
      desc.fs.images[6].sampler_type = SG_SAMPLERTYPE_FLOAT;
      desc.label = "offscreen_pbr_ibl_shader";
    };
    return &desc;
  }
  return 0;
}
